/*
 *  MIT License
 *
 *  Copyright (c) 2019 Webtrekk GmbH
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 *
 */

apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'io.codearte.nexus-staging'

buildscript {
    ext.versions = [
            'webtrekkVersion'        : '5.1.4',
            'gradleVersion'          : '3.6.4',
            'kotlinVersion'          : '1.6.10',//'1.4.32',
            'gradleVersionsPlugin'   : '0.21.0',
            'mavenPluginVersion'     : '2.1',
            'bintrayPluginVersion'   : '1.8.4',

            'compileSdkVersion'      : 31,
            'minSdkVersion'          : 21,
            'targetSdkVersion'       : 31,
            'buildTools'             : '31.0.0',

            'appCompatVersion'       : '1.4.1',
            'constraintLayoutVersion': '2.1.3',

            'kotlinCoroutines'       : '1.6.0-native-mt',
            'coreKtxVersion'         : '1.7.0',

            'okHttpVersion'          : '5.0.0-alpha.5',

            'workManagerVersion'     : '2.7.1',
            'roomVersion'            : '2.4.2',

            'testCoreVersion'        : '1.4.0',
            'testCoreVersionJunit'   : '1.1.3',
            'junitVersion'           : '4.13.2',
            'runnerVersion'          : '1.4.0',
            'espressoCoreVersion'    : '3.4.0',
            //Version 2.1.0 depends on androidx.arch.core:core-runtime:2.1.0 which must be explicitly added in android-sdk gradle
            'coreTestingVersion'     : '2.1.0',
            //Downgraded version from 1.9.3 to 1.9.2 while this issue is not resolved
            //https://github.com/mockk/mockk/issues/281
            'mockkVersion'           : '1.12.3',
            'kotlinTestVersion'      : '3.4.2',

            'ktlintVersion'          : '0.31.0',
            'dokkaVersion'           : '0.9.17',
            'googleServices'         : '4.3.10',
            'firebaseAppDistribution': '2.1.1'
    ]

    ext.libs = [
            kotlinStdlib          : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlinVersion",
            appCompat             : "androidx.appcompat:appcompat:$versions.appCompatVersion",
            coreKtx               : "androidx.core:core-ktx:$versions.coreKtxVersion",
            constraintLayout      : "androidx.constraintlayout:constraintlayout:$versions.constraintLayoutVersion",
            coroutinesCore        : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlinCoroutines",
            coroutinesAndroid     : "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlinCoroutines",
            okHttp                : "com.squareup.okhttp3:okhttp:$versions.okHttpVersion",
            room                  : "androidx.room:room-runtime:$versions.roomVersion",
            roomKtx               : "androidx.room:room-ktx:$versions.roomVersion",
            roomCompiler          : "androidx.room:room-compiler:$versions.roomVersion",
            workmanager           : "androidx.work:work-runtime-ktx:$versions.workManagerVersion",
            junit                 : "junit:junit:$versions.junitVersion",
            runner                : "androidx.test:runner:$versions.runnerVersion",
            espresso              : "androidx.test.espresso:espresso-core:$versions.espressoCoreVersion",
            androidTestCore       : "androidx.test:core:$versions.testCoreVersion",
            mockk                 : "io.mockk:mockk:$versions.mockkVersion",
            coroutinesTest        : "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.kotlinCoroutines",
            kotlinTest            : "io.kotlintest:kotlintest-runner-junit5:$versions.kotlinTestVersion",
            androidTestJunit      : "androidx.test.ext:junit:$versions.testCoreVersionJunit",
            androidMockk          : "io.mockk:mockk-android:$versions.mockkVersion",
            androidArchCoreTest   : "androidx.arch.core:core-testing:$versions.coreTestingVersion",
            androidRoomTest       : "androidx.room:room-testing:$versions.roomVersion",
            androidWorkmanagerTest: "androidx.work:work-testing:$versions.workManagerVersion"
    ]

    repositories {
        mavenLocal()
        google()
        mavenCentral()
        gradlePluginPortal()
//        jcenter()

    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlinVersion}"
        classpath "com.github.ben-manes:gradle-versions-plugin:${versions.gradleVersionsPlugin}"
        classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:${versions.dokkaVersion}"
        classpath "com.github.dcendents:android-maven-gradle-plugin:${versions.mavenPluginVersion}"
//        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:${versions.bintrayPluginVersion}"
        classpath "com.google.gms:google-services:${versions.googleServices}"
        classpath "com.google.firebase:firebase-appdistribution-gradle:${versions.firebaseAppDistribution}"
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.8.1'
        classpath 'io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.30.0'
    }
}

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        google()
        gradlePluginPortal()
//        jcenter()

    }

    apply from: "$rootDir/ktlint.gradle"

    // Enable progressive mode & allow Result return type
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            freeCompilerArgs += [
                    '-progressive',
                    '-Xallow-result-return-type'
            ]
        }
    }

    tasks.withType(Javadoc).all {
        enabled = false
    }
}
